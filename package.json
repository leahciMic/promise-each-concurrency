{
  "name": "promise-each-concurrency",
  "version": "0.0.2",
  "description": "Pretty much Bluebird's Promise.each with a concurrency option, and support iterators without enumerating them first.",
  "main": "dist/index.js",
  "scripts": {
    "test": "eslint ./src && mocha --reporter spec --compilers js:babel-core/register",
    "prepublish": "rm -rf ./dist && babel -d ./dist ./src"
  },
  "keywords": [
    "promise",
    "iteration",
    "each",
    "concurrency",
    "limit",
    "iterator"
  ],
  "repository": "leahcimic/promise-each-concurrency",
  "author": "Michael Leaney <leahcimic@gmail.com>",
  "license": "ISC",
  "devDependencies": {
    "babel": "^6.5.2",
    "babel-cli": "^6.10.1",
    "babel-core": "^6.10.4",
    "babel-eslint": "^6.1.0",
    "babel-plugin-transform-runtime": "^6.9.0",
    "babel-preset-es2015": "^6.9.0",
    "babel-preset-stage-3": "^6.5.0",
    "babel-runtime": "^6.9.2",
    "chai": "^3.5.0",
    "eslint": "^2.13.1",
    "eslint-config-airbnb-base": "^3.0.1",
    "lodash": "^4.13.1",
    "mocha": "^2.5.3",
    "sinon": "^1.17.4"
  },
  "dependencies": {
    "eslint-plugin-import": "^1.9.2"
  }
}
